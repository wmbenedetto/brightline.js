/*
 *     ____  ____  ____________  __________    _____   ________     _______
 *    / __ )/ __ \/  _/ ____/ / / /_  __/ /   /  _/ | / / ____/    / / ___/
 *   / __  / /_/ // // / __/ /_/ / / / / /    / //  |/ / __/  __  / /\__ \
 *  / /_/ / _, _// // /_/ / __  / / / / /____/ // /|  / /____/ /_/ /___/ /
 * /_____/_/ |_/___/\____/_/ /_/ /_/ /_____/___/_/ |_/_____(_)____//____/
 *
 * Brightline.js : The JavaScript Template Engine
 *
 * Copyright (c) 2012 Warren Benedetto <warren@transfusionmedia.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
(function(m,e){var n={OFF:0,ERROR:1,WARN:2,INFO:3,DEBUG:4};var c="OFF";var i=m.console||{};i.log=(typeof i.log==="function")?i.log:function(){};i.info=(typeof i.info==="function")?i.info:i.log;i.error=(typeof i.error==="function")?i.error:i.log;i.warn=(typeof i.warn==="function")?i.warn:i.log;var h=function(s,q,r,t){r=(!r)?"":r;t=(!t)?"INFO":t.toUpperCase();q="["+s+"()] "+q;if(b(t)){if(t==="ERROR"){i.error(q,r)}else{if(t==="WARN"){i.warn(q,r)}else{if(t==="INFO"){i.info(q,r)}else{i.log(q,r)}}}}};var b=function(s){var q=n[c];var r=n[s];return r<=q};var j=function(q){if(typeof q=="object"&&q!==null){for(var r in q){if(q.hasOwnProperty(r)){return false}}return true}return typeof q==="undefined"||q===null||q===""};var p=function(r,s){for(var q=0;q<s.length;q++){if(r===s[q]){return true}}return false};var l=function(q){return typeof q==="object"&&q!==null&&typeof q.length==="number"};var a=function(q){return typeof q==="object"&&q!==null&&typeof q.length!=="number"};var o=function(v,u,q){u=(typeof u==="undefined")?[]:u;q=(typeof q==="undefined")?{}:q;var s,t,w;for(var r in v){if(v.hasOwnProperty(r)){s=r;t=v[r];u.push(s);if(typeof t==="object"&&t!==null){q=o(t,u,q)}else{w=u.join(".");q[w]=t}u.pop()}}return q};var d=function(q){return q.replace(/^\s\s*/,"").replace(/\s\s*$/,"")};Function.prototype.bind=function(r){var q=this;return function(){return q.apply(r,arguments)}};var k=function k(q){this.name=q;this.content="";this.touched=0;this.variables=[];this.parsedContent=[];this.variableCache={};this.usedVariables={}};k.prototype={NODE_ID:null,name:null,content:null,touched:null,variables:null,parsedContent:null,variableCache:null,usedVariables:null,isAlreadyParsed:function(q){return q in this.usedVariables},getName:function(){return this.name},getParsedContent:function(){return this.parsedContent},addParsedContent:function(q){this.parsedContent.push(q)},setParsedContent:function(q){this.parsedContent=q},getContent:function(){return this.content},setContent:function(q){this.content=q},setVariables:function(q){this.variables=q},getVariables:function(){return this.variables},setTouched:function(q){this.touched=q},touch:function(){this.touched+=1},getTouched:function(){return this.touched},getVariableCache:function(){return this.variableCache},setUsedVariable:function(q,r){this.usedVariables[q]=r},getNodeID:function(){return this.getName()}};var g=function g(){this.childParentMap={};this.nodes={};this.numNodes=0;this.tree={}};g.prototype={childParentMap:null,nodes:null,numNodes:null,tree:null,log:function(s,q,r,t){h("Tree."+s,q,r,t)},addNode:function(q,r){this.nodes[r]=q;this.numNodes+=1},getNode:function(q){return(this.hasNode(q))?this.nodes[q]:null},getNodes:function(s){if(s){var q={};for(var r=0;r<s.length;r++){q[s[r]]=this.getNode(s[r])}return q}else{return this.nodes}},removeNode:function(r){if(this.hasNode(r)){try{delete this.nodes[r]}catch(q){this.nodes[r]=e}this.numNodes-=1}},hasNode:function(q){return q in this.nodes},isEmpty:function(){for(var q in this.nodes){if(this.nodes.hasOwnProperty(q)){return false}}return true},has:function(q){return this.hasNode(q)},getNodeID:function(q){if(typeof q==="string"||typeof q==="number"){return q}else{if(typeof q==="object"&&q!==null&&typeof q.getNodeID==="function"){return q.getNodeID()}else{throw new Error("[Tree.getNodeID()] Cannot get node ID")}}},addChild:function(r,t){var q=this.getNodeID(r);var s=this.getNodeID(t);if(this.hasParent(t)){throw new Error("[Tree.addChild()] Child node "+s+" already has a parent")}if(q===s){throw new Error("[Tree.addChild()] Parent and child node are the same. You cannot add a parent node as a child of itself, or vice-versa.")}if(this.hasNode(s)){throw new Error("[Tree.addChild()] The nodeID "+s+" is already in use")}if(!this.hasNode(q)){this.addNode(r,q)}this.log("addChild","Adding child",{parent:r,child:t},"DEBUG");this.addNode(t,s);if(!(q in this.tree)){this.tree[q]=[]}this.tree[q].push(s);this.childParentMap[s]=q},addChildren:function(s,r){if(!l(r)){throw new Error("[Tree.addChildren()] Children added to Tree must in an array")}this.log("addChildren","Adding children",{parent:s,children:r},"DEBUG");for(var q=0;q<r.length;q++){this.addChild(s,r[q])}},getChild:function(q){if(!this.hasNode(q)){throw new Error("[Tree.getChild()] Cannot get non-existent node "+q+" from Tree")}return this.getNode(q)},getChildren:function(r){var q=this.getNodeID(r);return(q in this.tree)?this.getNodes(this.tree[q]):{}},hasChild:function(r,t){var q=this.getNodeID(r);var s=this.getNodeID(t);if(!(s in this.childParentMap)){return false}return(q===this.childParentMap[s])},hasChildren:function(r){var q=this.getNodeID(r);return q in this.tree&&this.tree[q].length>0},removeChild:function(s,w){if(!this.isChildOf(s,w)){throw new Error("[Tree.removeChild()] Cannot remove child. This node is not a child of the given parent.")}this.log("removeChild","Removing child",{parent:s,child:w},"DEBUG");var q=this.getNodeID(s);var u=this.getNodeID(w);var v=this.tree[q];for(var r=0;r<v.length;r++){if(v[r]===u){v.splice(r,1);break}}try{delete this.childParentMap[u]}catch(t){this.childParentMap[u]=e}if(v.length===0){try{delete this.tree[q]}catch(t){this.tree[q]=e}}this.removeNode(u);if(this.hasChildren(u)){this.removeChildren(u)}},removeChildren:function(s,r){if(typeof r==="undefined"&&this.hasChildren(s)){r=this.getChildren(s)}this.log("removeChildren","Removing children",{parent:s,children:r},"DEBUG");for(var q in r){if(r.hasOwnProperty(q)){this.removeChild(s,r[q])}}},isChildOf:function(q,r){return this.hasChild(q,r)},addParent:function(r){if(!this.isEmpty()){throw new Error("[Tree.addParent()] Cannot add lone parent to a Tree that already has nodes in it. Use Tree.addChild(parent,child) instead.")}var q=this.getNodeID(r);if(this.hasNode(q)){throw new Error("[Tree.addParent()] Parent's node id must be unique.")}this.log("addParent","Adding parent",r,"DEBUG");this.addNode(r,q);if(!(q in this.tree)){this.tree[q]=[]}},getParent:function(r){if(!this.hasParent(r)){return false}var q=this.getParentNodeID(r);return this.getNode(q)},hasParent:function(r){var q=this.getParentNodeID(r);return q!==null},getParentNodeID:function(s){var q=null;if((typeof s==="string"||typeof s==="number")&&s in this.childParentMap){q=this.childParentMap[s]}else{if(typeof s==="object"&&s!==null&&typeof s.getNodeID==="function"){var r=s.getNodeID();q=(r in this.childParentMap)?this.childParentMap[r]:null}}return q},isParent:function(q){return this.hasChildren(q)},remove:function(r){var s=this.getNodeID(r);this.log("remove","Removing node",r,"DEBUG");if(this.hasParent(s)){var q=this.getParent(s);this.removeChild(q,r)}else{if(this.isParent(r)){this.removeChildren(r)}}this.removeNode(s)}};var f=function f(r,q){this.blocks=new g();this.currentBlock=null;this.currentScope=null;this.usedVariables={};this.variableCache={};if(a(q)){c=q.logLevel||"ERROR";this.name=q.name||null}this.log("constructor","Creating new Brightline template",q);if(typeof r==="string"){this.process(r)}return this.getAPI()};f.prototype={blocks:null,currentBlock:null,currentScope:null,name:null,usedVariables:null,variableCache:null,getAPI:function(){return{set:this.set.bind(this),setScope:this.setScope.bind(this),clearScope:this.clearScope.bind(this),touch:this.touch.bind(this),parse:this.parse.bind(this),render:this.render.bind(this),snip:this.snip.bind(this),setLogLevel:this.setLogLevel.bind(this),setName:this.setName.bind(this)}},setLogLevel:function(q){c=q},setName:function(q){this.name=q},log:function(s,q,r,t){s=(this.name)?this.name+": Brightline."+s:"Brightline."+s;h(s,q,r,t)},set:function(){var s=Array.prototype.slice.call(arguments);var r=null;var t=null;var q=false;if(a(s[0])){r=s[0];q=s[1];this.setObjectVars(r,q)}else{r=s[0];t=s[1];q=s[2];this.log("set",'Setting "'+r+'" to ',t);if(typeof t==="function"){t=t()}else{if(typeof t==="undefined"){t=null}}if(this.isValidKeyValuePair(r,t)){if(this.currentScope===null||q){this.variableCache[r]=t}else{this.currentScope.variableCache[r]=t}}}return this},setScope:function(q){if(!this.hasBlock(q)){throw new Error("["+this.name+" Brightline.setScope()] Cannot set scope to non-existent block: "+q)}this.log("setScope","Setting scope to "+q);this.currentScope=this.getBlock(q);return this},clearScope:function(q){this.log("clearScope","Clearing scope");q=(typeof q==="undefined")?true:q;if(!q&&this.currentScope!==null){this.currentScope.variableCache={};this.currentScope.usedVariables={}}if(q){this.currentScope=null}return this},touch:function(r){var q=this.getBlock(r);q.touch();this.log("touch","Touching block: "+r,q.getTouched());return this},parse:function(s,r){this.log("parse","Parsing block: "+s);s=(typeof s==="undefined")?"__root__":s;r=(typeof r==="undefined")?true:r;var q=this.getBlock(s);if(r){q.setTouched(1)}else{q.setTouched(0)}this.currentBlock=q.getName();this.parseBlock(q);this.clearUsedVariablesFromCache();this.clearScope(false);q.setTouched(0);this.currentBlock="__root__";return q},render:function(r){r=(typeof r==="undefined")?"__root__":r;this.log("render","Rendering "+r);var q=this.parse(r);var s=d(q.getParsedContent().join("\n"));this.clearScope();return s},snip:function(r){this.log("snip","Snipping block: "+r);r=(typeof r==="undefined")?"__root__":r;var q=this.parse(r,false);var s=q.getParsedContent();var t=d(s.join("\n"));if(t.length===0){t=q.getContent()}s=s.slice(0,0-q.getTouched());q.setParsedContent(s);this.clearScope();return t},setObjectVars:function(t,q){var r=o(t);this.log("setObject","Setting object vars",{originalObj:t,flattenedObj:r},"DEBUG");for(var s in r){if(r.hasOwnProperty(s)){this.set(s,r[s],q)}}},getBlock:function(q){if(!this.hasBlock(q)){throw new Error("["+this.name+" Brightline.getBlock()] Cannot get non-existent block: "+q)}return this.blocks.getChild(q)},hasBlock:function(q){return this.blocks.has(q)},process:function(r){this.log("process","Processing template string",{templateString:r},"DEBUG");var q=new k("__root__");q.setContent(r);this.findBlocks(q);this.insertChildBlockPlaceholders(q);this.findVariablesInBlockContent(q);if(!this.blocks.has("__root__")){this.blocks.addParent(q)}},findBlocks:function(q){var v=/<!--\s+BEGIN\s+([\.0-9A-Za-z:|_-]+)\s+-->([\s\S]*)<!--\s+END\s+\1\s+-->/mg;var w=q.getContent();var r=w.match(v);var y=this;if(r){this.log("findBlocks","Found blocks in "+q.getName(),r,"DEBUG");for(var s=0;s<r.length;s++){var u=new RegExp(v).exec(r[s]);if(u){var x=u[1];var t=new k(x);t.setContent(u[2]);if(y.blocks.has(x)){throw new Error("["+this.name+" Brightline.findBlocks()] Duplicate block name: "+x+". Block names must be unique.")}y.blocks.addChild(q,t);y.findBlocks(t);y.insertChildBlockPlaceholders(t);y.findVariablesInBlockContent(t)}}}},insertChildBlockPlaceholders:function(q){if(this.blocks.hasChildren(q)){this.log("insertChildBlockPlaceholders","Inserting child block placeholders in "+q.getName(),q,"DEBUG");var t=this.blocks.getChildren(q);var r=this;for(var s in t){if(t.hasOwnProperty(s)){(function(v){var u=v.getName();var x=q.getContent();var y="<!--\\s+BEGIN\\s+"+u+"\\s+-->([\\s\\S]*)<!--\\s+END\\s+"+u+"\\s+-->";var w=x.match(y);if(w){r.log("insertChildBlockPlaceholders"," --> Inserting placeholder for "+u,null,"DEBUG");q.setContent(x.replace(w[0],"{{__"+u+"__}}"))}}(t[s]))}}}},findVariablesInBlockContent:function(s){var v=/(?!\{{__[\.0-9A-Za-z\*:|_-]+__\}})\{{([\.0-9A-Za-z\*:|_-]+)\}}/mg;var u=[];var q=s.getContent().match(v);if(q){this.log("findVariablesInBlockContent","Found variables in "+s.getName(),{templateBlock:s,foundVariables:q},"DEBUG");for(var t=0;t<q.length;t++){if(!p(u,q[t])){var r=q[t].replace("{{","").replace("}}","");u.push(r)}}s.setVariables(u)}},parseBlock:function(q){this.log("parseBlock","Parsing "+q.getName(),q,"DEBUG");var s=this.blocks.getChildren(q);for(var r in s){if(s.hasOwnProperty(r)){this.parseBlock(s[r])}}this.currentBlock=q.getName();this.replaceBlockVariables(q);this.replaceChildBlockPlaceholders(q);q.setTouched(0);return q},replaceBlockVariables:function(u){var q=u.getContent();var r=u.getVariables();var x=u.getName();var v=u.getVariableCache();if(r.length>0){this.log("replaceBlockVariables","Replacing block variables in "+u.getName(),u,"DEBUG");for(var t=0;t<r.length;t++){var y=r[t];var z="{{"+y+"}}";if(x===this.currentBlock){if(y in v){q=q.replace(z,v[y]);this.log("replaceBlockVariables",' --> Replacing block variable "'+y+'" with "'+u.variableCache[y]+'" from template block',null,"DEBUG");u.setUsedVariable(y,true);u.touched=1}else{if(y in this.variableCache&&!u.isAlreadyParsed(y)){q=q.replace(z,this.variableCache[y]);this.log("replaceBlockVariables",' --> Replacing block variable "'+y+'" with "'+this.variableCache[y]+'" from variable cache',null,"DEBUG");this.usedVariables[y]=true;u.touched=1}else{this.log("replaceBlockVariables",' --> Replacing block variable "'+y+'" with empty string',null,"DEBUG");q=q.replace(z,"")}}}else{this.log("replaceBlockVariables",' --> Replacing block variable "'+y+'" with empty string',null,"DEBUG");q=q.replace(z,"")}}}var w=u.getTouched();for(var s=0;s<w;s++){u.addParsedContent(q)}},replaceChildBlockPlaceholders:function(q){var t=this.getParsedContent(q);var w=this.blocks.getChildren(q);if(!j(w)){this.log("replaceChildBlockPlaceholders","Replacing child block placeholders in "+q.getName(),{parsedContent:t},"DEBUG");for(var s in w){if(w.hasOwnProperty(s)){var v="{{__"+w[s].getName()+"__}}";var u=d(w[s].parsedContent.join(""));for(var r in t){if(t.hasOwnProperty(r)&&t[r].indexOf(v)>-1){this.log("replaceChildBlockPlaceholders"," --> Replacing child block "+v,{replacement:u},"DEBUG");t[r]=t[r].replace(v,u)}}w[s].parsedContent=[]}}q.setParsedContent(t)}},getParsedContent:function(q){if(q.parsedContent.length===0&&this.blocks.hasChildren(q)){var s=this.blocks.getChildren(q);for(var r in s){if(s.hasOwnProperty(r)){if(s[r].parsedContent.length>0){this.touch(q.getName());this.replaceBlockVariables(q);break}}}}this.log("getParsedContent","Getting parsed content for "+q.getName(),{parsedContent:q.parsedContent},"DEBUG");return q.getParsedContent()},clearUsedVariablesFromCache:function(){this.log("clearUsedVariablesFromCache","Clearing used variables from cache",this.usedVariables,"DEBUG");for(var r in this.usedVariables){if(this.usedVariables.hasOwnProperty(r)){try{delete this.variableCache[r]}catch(q){this.variableCache[r]=e}}}this.usedVariables=[]},isValidKeyValuePair:function(q,r){return(typeof q==="string")&&((typeof r==="string"&&r.length>0)||typeof r==="number"||typeof r==="boolean")}};m.Brightline=f}(window));