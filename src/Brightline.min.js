!function(root,undefined){var logLevel,isEmpty=function(item){if("object"==typeof item&&null!==item){for(var prop in item)if(item.hasOwnProperty(prop))return!1;return!0}return void 0===item||null===item||""===item},inArray=function(item,source){for(var i=0;i<source.length;i++)if(item===source[i])return!0;return!1},isArray=function(obj){return"object"==typeof obj&&null!==obj&&"number"==typeof obj.length},isObjLiteral=function(obj){return"object"==typeof obj&&null!==obj&&"number"!=typeof obj.length},flattenObj=function(source,pathArray,result){pathArray=void 0===pathArray?[]:pathArray,result=void 0===result?{}:result;var key,value;for(var i in source)source.hasOwnProperty(i)&&(key=i,value=source[i],pathArray.push(key),"object"==typeof value&&null!==value?result=flattenObj(value,pathArray,result):result[pathArray.join(".")]=value,pathArray.pop());return result},trim=function(str){return str.replace(/^\s\s*/,"").replace(/\s\s*$/,"")};Function.prototype.bind=function(scope){var self=this;return function(){return self.apply(scope,arguments)}};var TemplateBlock=function(name){this.name=name,this.content="",this.touched=0,this.variables=[],this.parsedContent=[],this.variableCache={},this.usedVariables={}};TemplateBlock.prototype={NODE_ID:null,name:null,content:null,touched:null,variables:null,parsedContent:null,variableCache:null,usedVariables:null,reset:function(){this.parsedContent=[],this.usedVariables={},this.touched=0},isAlreadyParsed:function(varName){return varName in this.usedVariables},getName:function(){return this.name},getParsedContent:function(){return this.parsedContent},addParsedContent:function(content){this.parsedContent.push(content)},setParsedContent:function(content){this.parsedContent=content},getContent:function(){return this.content},setContent:function(content){this.content=content},setVariables:function(variables){this.variables=variables},getVariables:function(){return this.variables},setTouched:function(num){this.touched=num},touch:function(){this.touched+=1},getTouched:function(){return this.touched},getVariableCache:function(){return this.variableCache},setUsedVariable:function(key,value){this.usedVariables[key]=value},getNodeID:function(){return this.getName()}};var Tree=function(){this.childParentMap={},this.nodes={},this.numNodes=0,this.tree={}};Tree.prototype={childParentMap:null,nodes:null,numNodes:null,tree:null,log:function(funcName,message,payload,level){},addNode:function(node,id){this.nodes[id]=node,this.numNodes+=1},getNode:function(id){return this.hasNode(id)?this.nodes[id]:null},getNodes:function(ids){if(ids){for(var nodes={},i=0;i<ids.length;i++)nodes[ids[i]]=this.getNode(ids[i]);return nodes}return this.nodes},removeNode:function(id){if(this.hasNode(id)){try{delete this.nodes[id]}catch(e){this.nodes[id]=void 0}this.numNodes-=1}},hasNode:function(id){return id in this.nodes},isEmpty:function(){for(var node in this.nodes)if(this.nodes.hasOwnProperty(node))return!1;return!0},has:function(id){return this.hasNode(id)},getNodeID:function(node){if("string"==typeof node||"number"==typeof node)return node;if("object"==typeof node&&null!==node&&"function"==typeof node.getNodeID)return node.getNodeID();throw new Error("[Tree.getNodeID()] Cannot get node ID")},addChild:function(parent,child){var parentNodeID=this.getNodeID(parent),childNodeID=this.getNodeID(child);if(this.hasParent(child))throw new Error("[Tree.addChild()] Child node "+childNodeID+" already has a parent");if(parentNodeID===childNodeID)throw new Error("[Tree.addChild()] Parent and child node are the same. You cannot add a parent node as a child of itself, or vice-versa.");if(this.hasNode(childNodeID))throw new Error("[Tree.addChild()] The nodeID "+childNodeID+" is already in use");this.hasNode(parentNodeID)||this.addNode(parent,parentNodeID),this.log("addChild","Adding child",{parent:parent,child:child},"DEBUG"),this.addNode(child,childNodeID),parentNodeID in this.tree||(this.tree[parentNodeID]=[]),this.tree[parentNodeID].push(childNodeID),this.childParentMap[childNodeID]=parentNodeID},addChildren:function(parent,children){if(!isArray(children))throw new Error("[Tree.addChildren()] Children added to Tree must in an array");for(var i=0;i<children.length;i++)this.addChild(parent,children[i])},getChild:function(childNodeID){if(!this.hasNode(childNodeID))throw new Error("[Tree.getChild()] Cannot get non-existent node "+childNodeID+" from Tree");return this.getNode(childNodeID)},getChildren:function(parent){var parentNodeID=this.getNodeID(parent);return parentNodeID in this.tree?this.getNodes(this.tree[parentNodeID]):{}},hasChild:function(parent,child){var parentNodeID=this.getNodeID(parent),childNodeID=this.getNodeID(child);return childNodeID in this.childParentMap&&parentNodeID===this.childParentMap[childNodeID]},hasChildren:function(parent){var parentNodeID=this.getNodeID(parent);return parentNodeID in this.tree&&this.tree[parentNodeID].length>0},removeChild:function(parent,child){if(!this.isChildOf(parent,child))throw new Error("[Tree.removeChild()] Cannot remove child. This node is not a child of the given parent.");for(var parentNodeID=this.getNodeID(parent),childNodeID=this.getNodeID(child),parentArray=this.tree[parentNodeID],i=0;i<parentArray.length;i++)if(parentArray[i]===childNodeID){parentArray.splice(i,1);break}try{delete this.childParentMap[childNodeID]}catch(e){this.childParentMap[childNodeID]=void 0}if(0===parentArray.length)try{delete this.tree[parentNodeID]}catch(e){this.tree[parentNodeID]=void 0}this.removeNode(childNodeID),this.hasChildren(childNodeID)&&this.removeChildren(childNodeID)},removeChildren:function(parent,children){void 0===children&&this.hasChildren(parent)&&(children=this.getChildren(parent));for(var i in children)children.hasOwnProperty(i)&&this.removeChild(parent,children[i])},isChildOf:function(parent,child){return this.hasChild(parent,child)},addParent:function(parent){if(!this.isEmpty())throw new Error("[Tree.addParent()] Cannot add lone parent to a Tree that already has nodes in it. Use Tree.addChild(parent,child) instead.");var parentNodeID=this.getNodeID(parent);if(this.hasNode(parentNodeID))throw new Error("[Tree.addParent()] Parent's node id must be unique.");this.addNode(parent,parentNodeID),parentNodeID in this.tree||(this.tree[parentNodeID]=[])},getParent:function(node){if(!this.hasParent(node))return!1;var parentNodeID=this.getParentNodeID(node);return this.getNode(parentNodeID)},hasParent:function(child){return null!==this.getParentNodeID(child)},getParentNodeID:function(child){var parentNodeID=null;if(("string"==typeof child||"number"==typeof child)&&child in this.childParentMap)parentNodeID=this.childParentMap[child];else if("object"==typeof child&&null!==child&&"function"==typeof child.getNodeID){var childNodeID=child.getNodeID();parentNodeID=childNodeID in this.childParentMap?this.childParentMap[childNodeID]:null}return parentNodeID},isParent:function(node){return this.hasChildren(node)},remove:function(node){var nodeID=this.getNodeID(node);if(this.hasParent(nodeID)){var parent=this.getParent(nodeID);this.removeChild(parent,node)}else this.isParent(node)&&this.removeChildren(node);this.removeNode(nodeID)}};var Brightline=function(templateString,options){return this.blocks=new Tree,this.currentBlock=null,this.currentScope=null,this.usedVariables={},this.variableCache={},isObjLiteral(options)&&(logLevel=options.logLevel||"ERROR",this.name=options.name||null),"string"==typeof templateString&&this.process(templateString),this.getAPI()};Brightline.prototype={blocks:null,currentBlock:null,currentScope:null,name:null,usedVariables:null,variableCache:null,getAPI:function(){return{set:this.set.bind(this),setScope:this.setScope.bind(this),clearScope:this.clearScope.bind(this),touch:this.touch.bind(this),parse:this.parse.bind(this),render:this.render.bind(this),snip:this.snip.bind(this),setLogLevel:this.setLogLevel.bind(this),setName:this.setName.bind(this),each:this.each.bind(this)}},setLogLevel:function(level){logLevel=level},setName:function(name){this.name=name},log:function(funcName,message,payload,level){},set:function(){var args=Array.prototype.slice.call(arguments),input=null,value=null,ignoreScope=!1;return isObjLiteral(args[0])?(input=args[0],ignoreScope=args[1],this.setObjectVars(input,ignoreScope)):(input=args[0],value=args[1],ignoreScope=args[2],"function"==typeof value?value=value():void 0===value&&(value=null),this.isValidKeyValuePair(input,value)&&(null===this.currentScope||ignoreScope?this.variableCache[input]=value:this.currentScope.variableCache[input]=value)),this},each:function(){var args=Array.prototype.slice.call(arguments),data=args[0],blockName=args[1],varName=null,callback=null;"string"==typeof args[2]?varName=args[2]:"function"==typeof args[2]&&(callback=args[2]),callback||"function"!=typeof args[3]||(callback=args[3]);for(var i in data)data.hasOwnProperty(i)&&(isObjLiteral(data[i])?this.set(data[i]):varName&&this.set(varName,data[i]),callback&&callback(data[i],i),this.parse(blockName))},setScope:function(blockName){if(!this.hasBlock(blockName))throw new Error("["+this.name+" Brightline.setScope()] Cannot set scope to non-existent block: "+blockName);return this.currentScope=this.getBlock(blockName),this},clearScope:function(resetScope){return(resetScope=void 0===resetScope||resetScope)||null===this.currentScope||(this.currentScope.variableCache={},this.currentScope.usedVariables={}),resetScope&&(this.currentScope=null),this},touch:function(blockName){var templateBlock=this.getBlock(blockName);return templateBlock.touch(),this},parse:function(blockName,touchBlock){blockName=void 0===blockName?"__root__":blockName,touchBlock=void 0===touchBlock||touchBlock;var templateBlock=this.getBlock(blockName);return touchBlock?templateBlock.setTouched(1):templateBlock.setTouched(0),this.currentBlock=templateBlock.getName(),this.parseBlock(templateBlock),this.clearUsedVariablesFromCache(),this.clearScope(!1),templateBlock.setTouched(0),this.currentBlock="__root__",templateBlock},render:function(blockName){blockName=void 0===blockName?"__root__":blockName;var templateBlock=this.parse(blockName),templateString=trim(templateBlock.getParsedContent().join("\n"));return this.clearScope(),templateBlock.reset(),templateString},snip:function(blockName){blockName=void 0===blockName?"__root__":blockName;var templateBlock=this.parse(blockName,!1),parsedContent=templateBlock.getParsedContent(),templateString=trim(parsedContent.join("\n"));return 0===templateString.length&&(templateString=templateBlock.getContent()),parsedContent=parsedContent.slice(0,0-templateBlock.getTouched()),templateBlock.setParsedContent(parsedContent),this.clearScope(),templateString},setObjectVars:function(obj,ignoreScope){var flattenedObj=flattenObj(obj);for(var i in flattenedObj)flattenedObj.hasOwnProperty(i)&&this.set(i,flattenedObj[i],ignoreScope)},getBlock:function(blockName){if(!this.hasBlock(blockName))throw new Error("["+this.name+" Brightline.getBlock()] Cannot get non-existent block: "+blockName);return this.blocks.getChild(blockName)},hasBlock:function(blockName){return this.blocks.has(blockName)},process:function(templateString){var rootBlock=new TemplateBlock("__root__");rootBlock.setContent(templateString),this.findBlocks(rootBlock),this.insertChildBlockPlaceholders(rootBlock),this.findVariablesInBlockContent(rootBlock),this.blocks.has("__root__")||this.blocks.addParent(rootBlock)},findBlocks:function(parentBlock){var pattern=/<!--\s+BEGIN\s+([\.0-9A-Za-z:|_-]+)\s+-->([\s\S]*)<!--\s+END\s+\1\s+-->/gm,foundBlocks=parentBlock.getContent().match(pattern),self=this;if(foundBlocks)for(var i=0;i<foundBlocks.length;i++){var foundBlock=new RegExp(pattern).exec(foundBlocks[i]);if(foundBlock){var blockName=foundBlock[1],templateBlock=new TemplateBlock(blockName);if(templateBlock.setContent(foundBlock[2]),self.blocks.has(blockName))throw new Error("["+this.name+" Brightline.findBlocks()] Duplicate block name: "+blockName+". Block names must be unique.");self.blocks.addChild(parentBlock,templateBlock),self.findBlocks(templateBlock),self.insertChildBlockPlaceholders(templateBlock),self.findVariablesInBlockContent(templateBlock)}}},insertChildBlockPlaceholders:function(templateBlock){if(this.blocks.hasChildren(templateBlock)){var childBlocks=this.blocks.getChildren(templateBlock);for(var i in childBlocks)childBlocks.hasOwnProperty(i)&&function(childBlock){var childBlockName=childBlocks[i].getName(),parentBlockContent=templateBlock.getContent(),childBlockPattern="\x3c!--\\s+BEGIN\\s+"+childBlockName+"\\s+--\x3e([\\s\\S]*)\x3c!--\\s+END\\s+"+childBlockName+"\\s+--\x3e",matches=parentBlockContent.match(childBlockPattern);matches&&templateBlock.setContent(parentBlockContent.replace(matches[0],"{{__"+childBlockName+"__}}"))}()}},findVariablesInBlockContent:function(templateBlock){var pattern=/(?!\{{__[\.0-9A-Za-z\*:|_-]+__\}})\{{([\.0-9A-Za-z\*:|_-]+)\}}/gm,variableArray=[],foundVariables=templateBlock.getContent().match(pattern);if(foundVariables){for(var i=0;i<foundVariables.length;i++)if(!inArray(variableArray,foundVariables[i])){var rawVariableName=foundVariables[i].replace("{{","").replace("}}","");variableArray.push(rawVariableName)}templateBlock.setVariables(variableArray)}},parseBlock:function(templateBlock){var childBlocks=this.blocks.getChildren(templateBlock);for(var i in childBlocks)childBlocks.hasOwnProperty(i)&&this.parseBlock(childBlocks[i]);return this.currentBlock=templateBlock.getName(),this.replaceBlockVariables(templateBlock),this.replaceChildBlockPlaceholders(templateBlock),templateBlock.setTouched(0),templateBlock},replaceBlockVariables:function(templateBlock){var blockContent=templateBlock.getContent(),blockVariables=templateBlock.getVariables(),blockName=templateBlock.getName(),blockVariableCache=templateBlock.getVariableCache();if(blockVariables.length>0)for(var i=0;i<blockVariables.length;i++){var variableName=blockVariables[i],placeholder="{{"+variableName+"}}";blockName===this.currentBlock?variableName in blockVariableCache?(blockContent=blockContent.replace(placeholder,blockVariableCache[variableName]),templateBlock.setUsedVariable(variableName,!0),templateBlock.touched=1):variableName in this.variableCache&&!templateBlock.isAlreadyParsed(variableName)?(blockContent=blockContent.replace(placeholder,this.variableCache[variableName]),this.usedVariables[variableName]=!0,templateBlock.touched=1):blockContent=blockContent.replace(placeholder,""):blockContent=blockContent.replace(placeholder,"")}for(var blockTouched=templateBlock.getTouched(),j=0;j<blockTouched;j++)templateBlock.addParsedContent(blockContent)},replaceChildBlockPlaceholders:function(templateBlock){var parsedContent=this.getParsedContent(templateBlock),childBlocks=this.blocks.getChildren(templateBlock);if(!isEmpty(childBlocks)){for(var i in childBlocks)if(childBlocks.hasOwnProperty(i)){var placeholder="{{__"+childBlocks[i].getName()+"__}}",replacement=trim(childBlocks[i].parsedContent.join(""));for(var j in parsedContent)parsedContent.hasOwnProperty(j)&&parsedContent[j].indexOf(placeholder)>-1&&(parsedContent[j]=parsedContent[j].replace(placeholder,replacement));childBlocks[i].parsedContent=[]}templateBlock.setParsedContent(parsedContent)}},getParsedContent:function(templateBlock){if(0===templateBlock.parsedContent.length&&this.blocks.hasChildren(templateBlock)){var childBlocks=this.blocks.getChildren(templateBlock);for(var i in childBlocks)if(childBlocks.hasOwnProperty(i)&&childBlocks[i].parsedContent.length>0){this.touch(templateBlock.getName()),this.replaceBlockVariables(templateBlock);break}}return templateBlock.getParsedContent()},clearUsedVariablesFromCache:function(){for(var varName in this.usedVariables)if(this.usedVariables.hasOwnProperty(varName))try{delete this.variableCache[varName]}catch(e){this.variableCache[varName]=void 0}this.usedVariables=[]},isValidKeyValuePair:function(key,value){return"string"==typeof key&&("string"==typeof value&&value.length>0||"number"==typeof value||"boolean"==typeof value)}},"undefined"!=typeof module?module.exports=Brightline:"function"==typeof define?define(function(){return Brightline}):root.Brightline=Brightline}(this);